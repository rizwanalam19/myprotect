{"remainingRequest":"/home/rizwan/Desktop/myra-ecom/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/rizwan/Desktop/myra-ecom/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/rizwan/Desktop/myra-ecom/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/rizwan/Desktop/myra-ecom/src/components/Blog.vue?vue&type=template&id=a2af8a5c&","dependencies":[{"path":"/home/rizwan/Desktop/myra-ecom/src/components/Blog.vue","mtime":1601736615793},{"path":"/home/rizwan/Desktop/myra-ecom/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/rizwan/Desktop/myra-ecom/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/rizwan/Desktop/myra-ecom/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/rizwan/Desktop/myra-ecom/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}